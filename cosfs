#!/usr/bin/env python
#coding=utf-8

import sys
import CosFS
import time
import datetime
from cosfs_conf import *

def timeformat(seconds):
    return time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(float(seconds)))

if __name__ == '__main__':
    fs = CosFS.CosFS(bucket_id, bucket_key, bucket_secret, bucket_name)

    def ls(args):
        '列出目录、文件（支持*前缀匹配）'
        path = '/'
        detail=False
        recursive=False
        
        if len(args) == 0:
            print >>sys.stderr, "command usage: ls <path> [-r|-l|-rl]"
            sys.exit(2)

        path = args[0]
        if len(args) > 1:
            if args[1] in ['-rl', '-lr']:
                detail = True
                recursive = True
            elif args[1] == '-r':
                recursive = True
            elif args[1] == '-l':
                detail = True
            else:
                print >>sys.stderr, "invalid arg %s" % (args[1])
                sys.exit(2)

        fs.ls(path, detail=detail, recursive=recursive)

    def cp(args):
        '从本地拷贝文件到cos，或从cos拷贝回来'
        if len(args) < 2:
            print >>sys.stderr, "command usage: cp <src> <dest> [-f]"
            print >>sys.stderr, "  src/dest may start with `cos:` to indicate it's a cos path"
            sys.exit(2)

        overwrite = len(args) >= 3 and args[2] == '-f'
        fs.cp(args[0], args[1], overwrite)

    def mv(args):
        '在cos上移动文件'
        if len(args) < 2:
            print >>sys.stderr, "command usage: mv <src> <dest>"
            sys.exit(2)

        fs.mv(args[0], args[1])

    def rm(args):
        '删除cos文件'
        if len(args) < 1:
            print >>sys.stderr, "command usage: rm <path>"
            sys.exit(2)

        fs.rm(args[0])

    def mkdir(args):
        '在cos创建目录'
        if len(args) < 1:
            print >>sys.stderr, "command usage: mkdir <path>"
            sys.exit(2)

        fs.mkdir(args[0])

    def rmdir(args):
        '删除cos目录'
        if len(args) < 1:
            print >>sys.stderr, "command usage: rmdir <path> [-r]"
            sys.exit(2)

        recursive = len(args) > 1 and args[1] == '-r'
        fs.rmdir(args[0], recursive)

    def cpdir(args):
        '从本地传目录到cos（暂不支持cos到本地）'
        if len(args) < 2:
            print >>sys.stderr, "command usage: cpdir <src> <dest> [-i|-f]"
            print >>sys.stderr, "  src/dest may start with `cos:` to indicate it's a cos path"
            print >>sys.stderr, "  -i means skip file existed on cos"
            print >>sys.stderr, "  -f means overwrite file existed on cos"
            sys.exit(2)

        conflict = CosFS.CONFLICT_ERROR
        if len(args) > 2:
            if args[2] == '-i':
                conflict = CosFS.CONFLICT_SKIP
            elif args[2] == '-f':
                conflict = CosFS.CONFLICT_OVERWRITE
            else:
                raise Exception("unsupported arg: " + args[2])
        fs.cpdir(args[0], args[1], conflict)

    def cat(args):
        '输出cos文件内容'
        if len(args) < 1:
            print >>sys.stderr, "command usage: cat <path>"
            sys.exit(2)

        fs.cat(args[0])

    def stat(args):
        '显示cos文件状态(大小、修改时间、创建时间)'
        if len(args) < 1:
            print >>sys.stderr, "command usage: stat <path>"
            sys.exit(2)

        ret = fs.stat(args[0])
        print 'url: %s\nfilesize: %d bytes, mtime: %s, ctime: %s' % (ret['access_url'].encode('utf-8'), int(ret['filesize']), timeformat(ret['mtime']), timeformat(ret['ctime']))

    exec_conf = {
        'ls': ls,
        'cp': cp,
        'mv': mv,
        'rm': rm,
        'mkdir': mkdir,
        'rmdir': rmdir,
        'cat': cat,
        'stat': stat,
        'cpdir': cpdir,
    }

    if len(sys.argv) < 2 or sys.argv[1] not in exec_conf:
        print 'Usage: %s <command> [arg1, arg2, ...]\ncommand list:' % (sys.argv[0])
        for command, func in exec_conf.items():
            print "    %-10s%s" % (command, func.__doc__)
        sys.exit(1)

    args = [] if len(sys.argv) <= 2 else sys.argv[2:]

    exec_conf[sys.argv[1]](args)
